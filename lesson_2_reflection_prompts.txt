What happens when you initialize a repository? Why do you need to do it?

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	It is an inbetween from the working directory and the repository and allows you to add files individually then when you're ready to commit bundles them 	together and commits them to the repository

How can you use the staging area to make sure you have one commit per logical change?

	The staging area bundles individual files together and you can commit them when happy that this represents one logical change. You can also compare the 	staging area to the last commit from the repository

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	If you want to try out a new feature such as making a game easier or giving an option of another language

How do the diagrams help you visualize the branch structure?

	They show the path the commits can go on and that it does not have to be linear. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The changes made from the parent updates are also merged which are shown by order of time. If a branch has a another branch that does not directly point to 		the parent then these changes are not included.	

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	
	Automatic takes away alot of the work but there is a danger that some merges could be conflicting or unwanted or at least warrant a discussion with other 		developers  who have contributed to the project. Manually merging is very labour intensive but does allow for complete understanding as to what is being 		merged.
